[{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Here is a piece of <strong>C++</strong> code that seems very peculiar. For some strange reason, sorting the data miraculously makes the code almost six times faster.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;algorithm&gt;\n#include &lt;ctime&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    // Generate data\n    const unsigned arraySize = 32768;\n    int data[arraySize];\n\n    for (unsigned c = 0; c &lt; arraySize; ++c)\n        data[c] = std::rand() % 256;\n\n    // !!! With this, the next loop runs faster\n    std::sort(data, data + arraySize);\n\n    // Test\n    clock_t start = clock();\n    long long sum = 0;\n\n    for (unsigned i = 0; i &lt; 100000; ++i)\n    {\n        // Primary loop\n        for (unsigned c = 0; c &lt; arraySize; ++c)\n        {\n            if (data[c] &gt;= 128)\n                sum += data[c];\n        }\n    }\n\n    double elapsedTime = static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC;\n\n    std::cout &lt;&lt; elapsedTime &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"sum = \" &lt;&lt; sum &lt;&lt; std::endl;\n}\n</code></pre>\n\n<ul>\n<li>Without <code>std::sort(data, data + arraySize);</code>, the code runs in <strong>11.54</strong> seconds.</li>\n<li>With the sorted data, the code runs in <strong>1.93</strong> seconds.</li>\n</ul>\n\n<p>Initially, I thought this might be just a language or compiler anomaly. So I tried it in <strong>Java</strong>.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>import java.util.Arrays;\nimport java.util.Random;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        // Generate data\n        int arraySize = 32768;\n        int data[] = new int[arraySize];\n\n        Random rnd = new Random(0);\n        for (int c = 0; c &lt; arraySize; ++c)\n            data[c] = rnd.nextInt() % 256;\n\n        // !!! With this, the next loop runs faster\n        Arrays.sort(data);\n\n        // Test\n        long start = System.nanoTime();\n        long sum = 0;\n\n        for (int i = 0; i &lt; 100000; ++i)\n        {\n            // Primary loop\n            for (int c = 0; c &lt; arraySize; ++c)\n            {\n                if (data[c] &gt;= 128)\n                    sum += data[c];\n            }\n        }\n\n        System.out.println((System.nanoTime() - start) / 1000000000.0);\n        System.out.println(\"sum = \" + sum);\n    }\n}\n</code></pre>\n\n<p>With a somewhat similar, but less extreme result.</p>\n\n<hr>\n\n<p>My first thought was that sorting brings the data into the cache, but my next thought was how silly that is, because the array was just generated.</p>\n\n<ul>\n<li>What is going on?</li>\n<li>Why is a sorted array faster than an unsorted array?</li>\n<li>The code is summing up some independent terms, and the order should not matter.</li>\n</ul>\n    </div>", "votes": "11763", "title": "Why is processing a sorted array faster than an unsorted array?", "link": "http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array", "tags": ["java", "c++", "performance", "optimization", "branch-prediction"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Say I create an object as followed:</p>\n\n<pre><code>var myJSONObject = {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\", \"regex\": \"^http://.*\"};\n</code></pre>\n\n<p>What is the best way to remove the property <code>regex</code> to end up with this new <code>myJSONObject</code>:</p>\n\n<pre><code>var myJSONObject = {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\"};\n</code></pre>\n    </div>", "votes": "2078", "title": "How to remove a property from a JavaScript object", "link": "http://stackoverflow.com/questions/208105/how-to-remove-a-property-from-a-javascript-object", "tags": ["javascript", "json"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I'd like to do something like this to tick a checkbox using jQuery:</p>\n\n<pre><code>$(\".myCheckBox\").checked(true);\n</code></pre>\n\n<p>or </p>\n\n<pre><code>$(\".myCheckBox\").selected(true);\n</code></pre>\n\n<p>Does such a thing exist?</p>\n    </div>", "votes": "2090", "title": "Checking a checkbox with jQuery?", "link": "http://stackoverflow.com/questions/426258/checking-a-checkbox-with-jquery", "tags": ["jquery", "checkbox"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>How do I force an overwrite of local files on a <a href=\"http://en.wikipedia.org/wiki/Git_%28software%29\">Git</a> pull?</p>\n\n<p>The scenario is following:</p>\n\n<ul>\n<li>A team member is modifying the templates for a website we are working on</li>\n<li>They are adding some images to the images directory (but forgets to add them under source control)</li>\n<li>They are sending the images by mail, later, to me</li>\n<li>I'm adding the images under the source control and pushing them to Github together with other changes</li>\n<li>They cannot pull updates from Github because git doesn't want to overwrite their files.</li>\n</ul>\n\n<p>The errors I'm getting are:</p>\n\n<blockquote>\n  <p>error: Untracked working tree file 'public/images/icon.gif' would be overwritten by merge.</p>\n</blockquote>\n\n<p>How do I force Git to overwrite them? The person is a designer - usually I resolve all the conflicts by hand so the server has the most recent version that they just needs to update on their computer.</p>\n    </div>", "votes": "2147", "title": "Force Git to overwrite local files on pull", "link": "http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull", "tags": ["git", "version-control", "git-pull", "git-fetch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Is there something similar to <code>@import</code> in CSS in JavaScript that allows you to include a JavaScript file inside another JavaScript file?</p>\n    </div>", "votes": "2161", "title": "Include a JavaScript file in another JavaScript file?", "link": "http://stackoverflow.com/questions/950087/include-a-javascript-file-in-another-javascript-file", "tags": ["javascript", "file", "import", "include"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>Until today I thought that for example:</p>\n\n<pre><code>i += j;\n</code></pre>\n\n<p>is just a shortcut for:</p>\n\n<pre><code>i = i + j;\n</code></pre>\n\n<p>But what if we try this:</p>\n\n<pre><code>int i = 5;\nlong j = 8;\n</code></pre>\n\n<p>Then <code>i = i + j;</code> will not compile but <code>i += j;</code> will compile fine.</p>\n\n<p>Does it mean that in fact <code>i += j;</code> is a shortcut for something like this\n<code>i = (type of i) (i + j)</code>?</p>\n    </div>", "votes": "2162", "title": "Java += operator", "link": "http://stackoverflow.com/questions/8710619/java-operator", "tags": ["java", "casting", "operators", "variable-assignment", "assignment-operator"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I need to check the <code>checked</code> property of a checkbox and perform an action based on the checked property using <a href=\"http://en.wikipedia.org/wiki/JQuery\">jQuery</a>.</p>\n\n<p>For example, if the age checkbox is checked, then I need to show a textbox to enter age, else hide the textbox.</p>\n\n<p>But the following code returns <code>false</code> by default:</p>\n\n<pre><code>if($('#isAgeSelected').attr('checked')) {\n    $(\"#txtAge\").show();\n} else {\n    $(\"#txtAge\").hide();\n}\n</code></pre>\n\n<p>How do I successfully query the <code>checked</code> property?</p>\n    </div>", "votes": "2169", "title": "Check checkbox checked property", "link": "http://stackoverflow.com/questions/901712/check-checkbox-checked-property", "tags": ["javascript", "jquery", "checkbox"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I am trying to checkout a remote branch:</p>\n\n<p>Somebody pushed a branch called <code>test</code> with <code>git push origin test</code> to a shared repository. I can see the branch with <code>git branch -r</code>. But how can I get this branch?</p>\n\n<ul>\n<li><p><code>git checkout test</code> does nothing</p></li>\n<li><p><code>git checkout origin/test</code> does something, but <code>git branch</code> says <code>* (no branch)</code>. I am on no branch?</p></li>\n</ul>\n\n<p>How do I share branches via a public repository?</p>\n    </div>", "votes": "2216", "title": "Checkout remote Git branch", "link": "http://stackoverflow.com/questions/1783405/checkout-remote-git-branch", "tags": ["git", "git-checkout", "remote-branch"]},
{"body": "<div class=\"post-text\" itemprop=\"text\">\r\n\r\n<p>I have a Flash project, and it has many source files. I have a fairly heavily-used class, call it Jenine. I recently (and, perhaps, callously) relocated Jenine from one namespace to another. I thought we were ready - I thought it was time. The new Jenine was better in every way - she had lost some code bloat, she had decoupled herself from a few vestigial class relationships, and she had finally come home to the namespace that she had always secretly known in her heart was the one she truly belonged to. She was among her own kind.</p>\n\n<p>Unfortunately, Flash would have none of that. Perhaps it had formed an attachment. Perhaps it didn't <em>want</em> Jenine to be decoupled. Either way, it clung to the old, perfect version of Jenine in its memory. It refused to move on. It ignored her (function) calls. It tried to forget her new, public interfaces. Instead, every instance of Jenine that it constructed was always a copy of the old version, down to its classpath:</p>\n\n<pre><code>var jenineInstance:Jenine = new Jenine();\ntrace( getQualifiedClassName(jenineInstance));\n// Should print: com.newnamespace.subspace::Jenine\n// Prints: com.oldnamespace.subspace::Jenine\n// Ah, young love!\n</code></pre>\n\n<p>We fought. I'm not proud of some of the things I said or did. In the end, in a towering fit of rage, I deleted all references of Jenine completely. She was utterly, completely erased from the system. My cursor fell upon the \"Empty Trash\" menu option like the cold lid of a casket.</p>\n\n<p>I don't think Flash ever recovered. To this day it still clings to the memory of Jenine. Her old, imperfect definitions still float through my project like abandoned ghosts. Whenever I force Flash to compile, it still lovingly inserts her into my movie, nestling her definition in amongst the other, living classes, like a small shrine. I wonder if they can see her.</p>\n\n<p>Flash and I don't really talk anymore. I write my code, it compiles it. There's a new girl in town named Summer who looks almost identical to Jenine, as if someone had just copied her source-code wholesale into a new class, but Flash hasn't shown any interest. Most days it just mopes around and writes bad poetry in my comments when it thinks I'm not looking.</p>\n\n<p>I hope no one else has had a similar experience, that this is just a singular, painful ripple in the horrifying dark lagoon that is the Flash code-base. If, by some fluke chance you have, or you have any idea how to erase whatever damn cache the compiler is using, please, please help.</p>\n    </div>", "votes": "2256", "title": "Flash CS4 refuses to let go", "link": "http://stackoverflow.com/questions/2193953/flash-cs4-refuses-to-let-go", "tags": ["flash", "caching", "compiler-construction", "flash-cs4"]}